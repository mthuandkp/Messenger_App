/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DTO.GroupChatDTO;
import DTO.UserDTO;
import Func.Hyrid_Encryption;
import Network.Config;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.security.NoSuchAlgorithmException;
import java.security.PublicKey;
import java.util.Base64;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.swing.JOptionPane;

/**
 *
 * @author mthuan
 */
public class Group_Item extends javax.swing.JPanel {

    GroupChatDTO groupchat;
    UserDTO user;
    String PUBLIC_KEY_SERVER = "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCbPndbAp25koChNaXO9XfZHLBEVKWedG5c2Inio657AePBaYzYISc2ucXwHDzn+xJsFbthGzyt+CYsnVdrtwpVB3Pv7TpWnj2W2l0yG5vrOjsUERVBaC+6Mk1+RNXRimqxCJDtJTtXeB9/bZGXBe4WcPXUhwIB563JPyAGTyeVnwIDAQAB";
    String randomKey;
    PublicKey pKeyServer;

    /**
     * Creates new form Group_Item
     */
    public Group_Item(GroupChatDTO group, UserDTO u) {
        this.groupchat = group;
        this.user = u;
        this.pKeyServer = Hyrid_Encryption.getPublicKeyRSA(PUBLIC_KEY_SERVER);
        initSocket();
        initComponents();
        display();

    }

    private void initSocket() {
        try {
            //Tao random key
            KeyGenerator keyGen = KeyGenerator.getInstance("AES");
            keyGen.init(256); // for example
            SecretKey secretKey = keyGen.generateKey();
            randomKey = Base64.getEncoder().encodeToString(secretKey.getEncoded());
            pKeyServer = Hyrid_Encryption.getPublicKeyRSA(PUBLIC_KEY_SERVER);

        } catch (NoSuchAlgorithmException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        group_name = new javax.swing.JLabel();
        group_status = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        near_message = new javax.swing.JLabel();
        joinChatBtn = new javax.swing.JLabel();
        joinGroupBtn = new javax.swing.JLabel();

        background.setBackground(new java.awt.Color(254, 254, 254));
        background.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        group_name.setFont(new java.awt.Font("Arimo", 1, 20)); // NOI18N
        group_name.setText("ten nhom chat");
        background.add(group_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 450, 20));

        group_status.setFont(new java.awt.Font("Arimo", 0, 18)); // NOI18N
        group_status.setText("trang thai");
        background.add(group_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 440, 20));

        jPanel1.setBackground(new java.awt.Color(31, 137, 225));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        background.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 300, 10));
        background.add(near_message, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 300, 30));

        joinChatBtn.setFont(new java.awt.Font("Arimo", 1, 18)); // NOI18N
        joinChatBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-chat-48.png"))); // NOI18N
        joinChatBtn.setText("Vào chat");
        joinChatBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(4, 136, 230), 2));
        joinChatBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                joinChatBtnMouseClicked(evt);
            }
        });
        background.add(joinChatBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, 140, -1));

        joinGroupBtn.setFont(new java.awt.Font("Arimo", 1, 18)); // NOI18N
        joinGroupBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-enter-48.png"))); // NOI18N
        joinGroupBtn.setText("Tham Gia");
        joinGroupBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(4, 136, 230), 2));
        joinGroupBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                joinGroupBtnMouseClicked(evt);
            }
        });
        background.add(joinGroupBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void joinChatBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_joinChatBtnMouseClicked
        // TODO add your handling code here:
        new Chat_Room_Group(groupchat, user).setVisible(true);
    }//GEN-LAST:event_joinChatBtnMouseClicked

    private void joinGroupBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_joinGroupBtnMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            int choose = JOptionPane.showConfirmDialog(null, "Bạn có muốn tham gia nhóm chat ?", "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (choose != 0) {
                return;
            }

            PublicKey pKeyServer = Hyrid_Encryption.getPublicKeyRSA(PUBLIC_KEY_SERVER);
            Socket socket = new Socket(Config.HOST, Config.PORT);
            BufferedReader input = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            BufferedWriter output = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));

            new Thread(new Join_room(input, output, user, groupchat, pKeyServer)).start();
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_joinGroupBtnMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JLabel group_name;
    private javax.swing.JLabel group_status;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel joinChatBtn;
    private javax.swing.JLabel joinGroupBtn;
    private javax.swing.JLabel near_message;
    // End of variables declaration//GEN-END:variables

    private void display() {
        group_name.setText(groupchat.getName());
        group_status.setText(groupchat.isIsJoin() ? "Đã tham gia" : "Chưa tham gia");
        joinChatBtn.setVisible(groupchat.isIsJoin());
        joinGroupBtn.setVisible(!groupchat.isIsJoin());
        near_message.setText(groupchat.isIsJoin() ? groupchat.getNearlyMessage() : "");
    }

    @Override
    public String toString() {
        return group_name.getText() + group_status.getText() + near_message.getText();
    }

    private class Join_room implements Runnable {

        BufferedReader input;
        BufferedWriter output;
        UserDTO user;
        GroupChatDTO groupChat;
        PublicKey pKey;

        public Join_room(BufferedReader in, BufferedWriter out, UserDTO user, GroupChatDTO groupChat, PublicKey pKey) {
            this.input = in;
            this.output = out;
            this.user = user;
            this.groupChat = groupChat;
            this.pKey = pKey;
        }

        @Override
        public void run() {
            try {
                HashMap<String, String> maps = new HashMap<>();
                int[] str = {(user.getId()), (groupChat.getId_group())};
                //Khoi tao data          
                maps.put("command", "JOIN_GROUPCHAT");
                maps.put("data", new Gson().toJson(str));
                //Ma hoa du lieu
                String data = new Gson().toJson(maps);
                data = Hyrid_Encryption.encryptAES(data, randomKey);
                //Ma hoa randomkey
                String encryptRandomKey = Hyrid_Encryption.encryptRSA(randomKey, pKey);
                //Tao du lieu gui den server                     
                HashMap<String, String> sendServer = new HashMap<>();
                sendServer.put("key", encryptRandomKey);
                sendServer.put("value", data);
                String strSend = new Gson().toJson(sendServer);

                output.write(strSend);
                output.newLine();
                output.flush();

                String inputStr = input.readLine();

                //Gia ma du lieu
                inputStr = Hyrid_Encryption.decryptAES(inputStr, randomKey);
                if (inputStr == null) {
                   return;
                }
                
                //ep kieu thanh hashmap
                maps = new Gson().fromJson(inputStr, new TypeToken<HashMap<String, String>>() {
                }.getType());

                executeCommand(maps);

            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        }
        
        private void executeCommand(HashMap<String, String> maps) {
            if(maps.get("command") == null){
                return;
            }
            switch (maps.get("command")) {
                case "JOIN_GROUPCHAT": {
                    JOptionPane.showMessageDialog(null, maps.get("result"));
                    break;
                }
            }
        }

    }
}
